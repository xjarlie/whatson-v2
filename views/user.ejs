<!DOCTYPE html>
<html>
	<head>
		<%- include('./partials/head'); %>
		<link rel="stylesheet" href="/public/css/index-new.css" />
	</head>

	<body>
		<%- include('./partials/nav', { title: 'User', user: user, hideMenu: true,
		showBack: true, search: true }); %>

		<div class="container">
			<h4 class="center-align" style="font-weight: 500">
				<%= pageUser.displayName %>
			</h4>
			<div class="row center-align">
				<div class="chip deep-orange white-text center-align">
					@<%= pageUser.username %>
				</div>
			</div>
			<div class="row"></div>
			<div class="row" id="search-row" hidden="true">
				<div class="input-field scale-transition">
					  <i class="material-icons prefix">search</i>              		
					<input id="search-box" type="text" />
					  <label for="search-box">Search</label>
				</div>
			</div>
			<hr />

			<% if (locals.isFriend) { %> <% for (const i in locals.posts) { %>
				<div class="card z-depth-1 post-card" data-postid="<%= posts[i].id %>">
			
					<div class="card-content waves-effect" href="/app/posts/<%= locals.posts[i].id %>?referrer=/">
						<a href="/app/posts/<%= locals.posts[i].id %>?referrer=/" style="color: black; font-weight: bold">
		
							<% if (locals.posts[i].people) {  if (locals.posts[i].people.includes(user.username)) { %>
								<span class="new badge right deep-orange" data-badge-caption="Recommended to you"></span>
							<% }} %>
							<p class="deep-orange-text author-p" style="width: fit-content">
								@<%= posts[i].author %>
							</p>
							<span class="card-title" style="font-weight: bold"
								><%= posts[i].title %></span
							>
		
							<div class="rating">
								<% for (let j = 1; j < 6; j++) { %>
									<span class="star star-<%= j %>  <% if (locals.posts[i].rating >= j) { %> deep-orange-text <% } else { %> grey-text <% } %>">â˜…</span>
								<% } %>
							</div>
		
							<div class="chip deep-orange white-text category-chip"><%= posts[i].category %></div>
							<% if (posts[i].genre) { %>
								<div class="chip genre-chip"><%= posts[i].genre %></div>
							<% } %>
		
							<% if (posts[i].review) { %>
							<div class="desc" style="padding-top: 1rem; padding-bottom: 1rem;">
								<% n = 70 %>
								<p><%= (posts[i].review.length > n) ? posts[i].review.substr(0, n-1) + '...' : posts[i].review  %> <% if (posts[i].review.length > n) { %> <span style="color: grey">Read more</span><% } %></p>
								<!-- <p><%= posts[i].review %></p> -->
							</div>
							<% } %>
		
						</a>
					</div>
					<div class="card-action">
						<% if (posts[i].onWatchlist) { %>
						<button class="waves-effect btn-flat waves-light minor-button" type="button" onclick="removeFromWatchlist('<%= posts[i].id %>')"><i class="material-icons left">remove_circle_outline</i>Remove from watchlist</button>
						<% } else { %>
							<button class="waves-effect btn-flat waves-light minor-button" type="button" onclick="addToWatchlist('<%= posts[i].id %>')"><i class="material-icons left">add</i>Add to watchlist</button>
						<% } %>
						<button class="waves-effect btn-flat waves-light minor-button" style="float: right;" type="button"><i class="material-icons" onclick="sharePost('<%= posts[i].id %>', event)">share</i></button>
					</div>
				</div>
			<% } %> <% if (locals.posts.length == 0) { %>

			<h5 class="center-align">No posts yet</h5>

			<% } %> <% } else { %>

			<button
				class="btn deep-orange waves-effect waves-light"
				type="button"
				onclick="addFriend()"
				style="width: 100%"
			>
				<i class="material-icons left">person_add_alt_1</i>Add Friend
			</button>

			<% } %>
		</div>

		<%- include('./partials/foot'); %>
		<script>
			M.AutoInit();

			async function addFriend() {
				const url = "/api/users/requests/send";
				const result = await fetch(url, {
					method: "POST",
					headers: {
						"Content-Type": "application/json",
					},
					body: JSON.stringify({ request: userToSearch }),
				});
				const status = await result.status;
				const json = await result.json();
				console.log(status, json);

				if (status == 201) {
					M.toast({ html: "Friend request sent" });
					document.querySelector("#search-box").value = "";
					document.querySelector("#send-btn").classList.add("disabled");
				} else {
					alert(json.error);
				}
			}

			const posts = [...document.querySelectorAll('.post-card')];
			document.querySelector('#search-box').oninput = (e) => {

				const searchTerm = document.querySelector('#search-box').value.trim().toLowerCase();

				if (searchTerm.length > 0) { 
					for (const i in posts) {
						const title = posts[i].querySelector('.card-title').textContent.trim().toLowerCase();

						const genreChip = posts[i].querySelector('.genre-chip');
						const genre = genreChip ? genreChip.textContent.trim().toLowerCase() : '';

						if (title.includes(searchTerm, 0) || genre.includes(searchTerm, 0)) {
							posts[i].removeAttribute('hidden');
						} else {
							posts[i].setAttribute('hidden', 'true');
						}
					}
				} else {
					for (const i in posts) {
						posts[i].removeAttribute('hidden');
					}
				}
			}

			function clearSearch() {
            	for (const i in posts) {
                	posts[i].removeAttribute('hidden');
            	}
        	}

			async function addToWatchlist(id) {
            const postID = id;
            
            const url = '/api/users/<%= user.username %>/watchlist/add';
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ postID })
            });
            const json = await response.json();
            const status = await response.status;
            console.log(status, json);
            if (status == 201) {
                M.toast({html: 'Added to watchlist'});
                const button = document.querySelector(`.post-card[data-postid="${id}"]`).querySelector('.card-action').querySelectorAll('button')[0]
				button.innerHTML = '<i class="material-icons left">remove_circle_outline</i>Remove from watchlist';
				button.onclick = () => { removeFromWatchlist(postID) };
            }
        }

		async function removeFromWatchlist(id) {
            const postID = id;

            const url = '/api/users/<%= user.username %>/watchlist/remove';
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ postID })
            });
            const json = await response.json();
            const status = await response.status;
            console.log(status, json);
            if (status == 201) {
                M.toast({html: 'Removed from watchlist'});
                const button = document.querySelector(`.post-card[data-postid="${id}"]`).querySelector('.card-action').querySelectorAll('button')[0]
				button.innerHTML = '<i class="material-icons left">add</i>Add to watchlist';
				button.onclick = () => { addToWatchlist(postID) };

			}
        }

		function sharePost(id, e) {
			e.preventDefault();
			const url = window.location.origin + '/p/' + id
			if (navigator.share) {
				navigator.share({
					url: url
				});
			} else if (navigator.clipboard) {
				navigator.clipboard.writeText(url).then((txt) => {
					M.toast({ html: 'Copied url to clipboard '});
				});
			} else {
				M.toast({ html: 'Share not supported' });
			}
		}
		</script>
	</body>
</html>
